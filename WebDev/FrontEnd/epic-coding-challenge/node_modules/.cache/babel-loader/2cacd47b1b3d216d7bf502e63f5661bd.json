{"ast":null,"code":"import _slicedToArray from \"C:/Users/paull/Desktop/mad-mobile-coding-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\paull\\\\Desktop\\\\mad-mobile-coding-challenge\\\\src\\\\List\\\\ListCard\\\\ListCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { Card, Image, Form, Input, Button } from \"antd\";\nimport { EditOutlined, PropertySafetyFilled } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListMain(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editPerson = _useState2[0],\n      setEditPerson = _useState2[1];\n\n  var refInput = useRef(null);\n  var _props$person$name = props.person.name,\n      first = _props$person$name.first,\n      last = _props$person$name.last;\n  var large = props.person.picture.large;\n  var _props$person$locatio = props.person.location,\n      state = _props$person$locatio.state,\n      city = _props$person$locatio.city;\n  var fullName = first + \" \" + last;\n  var cityState = city + \", \" + state;\n  var listInfoDiv = \"\";\n  var nameSpan = \"\";\n\n  if (editPerson) {\n    nameSpan = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listName\",\n      children: fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n    listInfoDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listInfo\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        size: \"small\",\n        onClick: function onClick() {\n          return setEditPerson(false);\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        name: \"personLocationContactForm\",\n        layout: \"vertical\",\n        size: \"small\",\n        onFinish: function onFinish(data) {\n          console.log(data);\n          console.log(refInput.state.value);\n          var emailData = {\n            id: props.id\n          };\n          props.editPersonFn();\n          setEditPerson(false);\n        },\n        onFinishFailed: function onFinishFailed(err) {\n          props.editFailedFn(err);\n          setEditPerson(false);\n        },\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Email\",\n          name: \"email\",\n          rules: [{\n            required: true,\n            type: \"email\",\n            message: \"Please input a valid email!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            ref: refInput,\n            type: \"email\",\n            placeholder: props.person.email,\n            value: props.person.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  } else {\n    nameSpan = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listName\",\n      children: fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n    listInfoDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.person.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.person.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cityState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"listCard\",\n    hoverable: true,\n    bordered: false,\n    loading: props.loading,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"listIcon\",\n        onClick: function onClick() {\n          return setEditPerson(!editPerson);\n        },\n        children: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), nameSpan]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listImg\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: large,\n        alt: fullName + \" image\",\n        preview: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), listInfoDiv]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListMain, \"8B+Z7J4k0xsCuzjzMSD7/x8Dz5s=\");\n\n_c = ListMain;\nListMain.propTypes = {\n  editPersonFn: PropTypes.func,\n  editFailedFn: PropTypes.func,\n  person: PropTypes.object,\n  loading: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ListMain\");","map":{"version":3,"sources":["C:/Users/paull/Desktop/mad-mobile-coding-challenge/src/List/ListCard/ListCard.js"],"names":["useState","useRef","Card","Image","Form","Input","Button","EditOutlined","PropertySafetyFilled","PropTypes","ListMain","props","editPerson","setEditPerson","refInput","person","name","first","last","large","picture","location","state","city","fullName","cityState","listInfoDiv","nameSpan","data","console","log","value","emailData","id","editPersonFn","err","editFailedFn","required","type","message","email","offset","span","phone","loading","propTypes","func","object","bool"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\r\nimport { Card, Image, Form, Input, Button } from \"antd\";\r\nimport { EditOutlined, PropertySafetyFilled } from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ListMain(props) {\r\n  const [editPerson, setEditPerson] = useState(false);\r\n  const refInput = useRef(null);\r\n\r\n  let { first, last } = props.person.name;\r\n  let { large } = props.person.picture;\r\n  let { state, city } = props.person.location;\r\n\r\n  let fullName = first + \" \" + last;\r\n  let cityState = city + \", \" + state;\r\n\r\n  let listInfoDiv = \"\";\r\n  let nameSpan = \"\";\r\n  if (editPerson) {\r\n    nameSpan = <span className=\"listName\">{fullName}</span>;\r\n    listInfoDiv = (\r\n      <div className=\"listInfo\">\r\n        <Button danger size=\"small\" onClick={() => setEditPerson(false)}>\r\n          Cancel\r\n        </Button>\r\n        <Form\r\n          name=\"personLocationContactForm\"\r\n          layout=\"vertical\"\r\n          size=\"small\"\r\n          onFinish={(data) => {\r\n            console.log(data)\r\n            console.log(refInput.state.value)\r\n            let emailData = { id: props.id,  };\r\n            props.editPersonFn();\r\n            setEditPerson(false);\r\n          }}\r\n          onFinishFailed={(err) => {\r\n            props.editFailedFn(err);\r\n            setEditPerson(false);\r\n          }}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                type: \"email\",\r\n                message: \"Please input a valid email!\"\r\n              }\r\n            ]}\r\n          >\r\n            <Input\r\n              ref={refInput}\r\n              type=\"email\"\r\n              placeholder={props.person.email}\r\n              value={props.person.email}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  } else {\r\n    nameSpan = <span className=\"listName\">{fullName}</span>;\r\n    listInfoDiv = (\r\n      <div className=\"listInfo\">\r\n        <p>{props.person.email}</p>\r\n        <p>{props.person.phone}</p>\r\n        <p>{cityState}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className=\"listCard\"\r\n      hoverable\r\n      bordered={false}\r\n      loading={props.loading}\r\n    >\r\n      <div className=\"listHeader\">\r\n        <span className=\"listIcon\" onClick={() => setEditPerson(!editPerson)}>\r\n          <EditOutlined />\r\n        </span>\r\n        {nameSpan}\r\n      </div>\r\n      <div className=\"listImg\">\r\n        <Image src={large} alt={fullName + \" image\"} preview={false} />\r\n      </div>\r\n      {listInfoDiv}\r\n    </Card>\r\n  );\r\n}\r\n\r\nListMain.propTypes = {\r\n  editPersonFn: PropTypes.func,\r\n  editFailedFn: PropTypes.func,\r\n  person: PropTypes.object,\r\n  loading: PropTypes.bool\r\n};\r\n"]},"metadata":{},"sourceType":"module"}