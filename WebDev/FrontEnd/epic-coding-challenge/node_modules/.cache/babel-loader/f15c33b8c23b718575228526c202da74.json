{"ast":null,"code":"import _slicedToArray from \"C:/Users/paull/Desktop/mad-mobile-coding-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\paull\\\\Desktop\\\\mad-mobile-coding-challenge\\\\src\\\\List\\\\ListCard\\\\ListCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Card, Image, Input, Button } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListMain(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editPerson = _useState2[0],\n      setEditPerson = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailInput = _useState4[0],\n      setEmailInput = _useState4[1];\n\n  var _props$person$name = props.person.name,\n      first = _props$person$name.first,\n      last = _props$person$name.last;\n  var large = props.person.picture.large;\n  var _props$person$locatio = props.person.location,\n      state = _props$person$locatio.state,\n      city = _props$person$locatio.city;\n  var email = props.person.email.email;\n  var fullName = first + \" \" + last;\n  var cityState = city + \", \" + state;\n  var listInfoDiv = \"\";\n  var nameSpan = \"\";\n\n  if (editPerson) {\n    nameSpan = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listName\",\n      children: fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n    listInfoDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"personLocationContactForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            allowClear: true,\n            placeholder: email,\n            onChange: function onChange(e) {\n              return setEmailInput(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          danger: true,\n          size: \"small\",\n          onClick: function onClick() {\n            return setEditPerson(false);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: function onClick() {\n            console.log(emailInput);\n            var data = {\n              id: props.id,\n              email: emailInput\n            };\n            props.editPersonFn(data);\n            setEditPerson(false);\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  } else {\n    nameSpan = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listName\",\n      children: fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n    listInfoDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.person.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.person.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cityState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"listCard\",\n    hoverable: true,\n    bordered: false,\n    loading: props.loading,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"listIcon\",\n        onClick: function onClick() {\n          return setEditPerson(!editPerson);\n        },\n        children: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), nameSpan]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listImg\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        src: large,\n        alt: fullName + \" image\",\n        preview: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), listInfoDiv]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListMain, \"XvWYcp5v7ZTaZpcJRXMX0C5kFbU=\");\n\n_c = ListMain;\nListMain.propTypes = {\n  editPersonFn: PropTypes.func,\n  editFailedFn: PropTypes.func,\n  person: PropTypes.object,\n  loading: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ListMain\");","map":{"version":3,"sources":["C:/Users/paull/Desktop/mad-mobile-coding-challenge/src/List/ListCard/ListCard.js"],"names":["useState","Card","Image","Input","Button","EditOutlined","PropTypes","ListMain","props","editPerson","setEditPerson","emailInput","setEmailInput","person","name","first","last","large","picture","location","state","city","email","fullName","cityState","listInfoDiv","nameSpan","e","target","value","console","log","data","id","editPersonFn","phone","loading","propTypes","func","editFailedFn","object","bool"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Card, Image, Input, Button } from \"antd\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ListMain(props) {\r\n  const [editPerson, setEditPerson] = useState(false);\r\n  const [emailInput, setEmailInput] = useState('');\r\n\r\n  let { first, last } = props.person.name;\r\n  let { large } = props.person.picture;\r\n  let { state, city } = props.person.location;\r\n  let { email } = props.person.email;\r\n\r\n  let fullName = first + \" \" + last;\r\n  let cityState = city + \", \" + state;\r\n\r\n  let listInfoDiv = \"\";\r\n  let nameSpan = \"\";\r\n\r\n  if (editPerson) {\r\n    nameSpan = <span className=\"listName\">{fullName}</span>;\r\n    listInfoDiv = (\r\n      <div className=\"listInfo\">\r\n        <form\r\n          name=\"personLocationContactForm\">\r\n            <label> Email:\r\n              <input type=\"email\" allowClear placeholder={email} onChange={(e) => setEmailInput(e.target.value)}/>\r\n            </label>\r\n          <Button danger size=\"small\" onClick={() => setEditPerson(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"primary\" onClick={() => {\r\n              console.log(emailInput)\r\n              let data = {id: props.id, email: emailInput};\r\n              props.editPersonFn(data);\r\n              setEditPerson(false);\r\n            }}>\r\n              Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else {\r\n    nameSpan = <span className=\"listName\">{fullName}</span>;\r\n    listInfoDiv = (\r\n      <div className=\"listInfo\">\r\n        <p>{props.person.email}</p>\r\n        <p>{props.person.phone}</p>\r\n        <p>{cityState}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className=\"listCard\"\r\n      hoverable\r\n      bordered={false}\r\n      loading={props.loading}\r\n    >\r\n      <div className=\"listHeader\">\r\n        <span className=\"listIcon\" onClick={() => setEditPerson(!editPerson)}>\r\n          <EditOutlined />\r\n        </span>\r\n        {nameSpan}\r\n      </div>\r\n      <div className=\"listImg\">\r\n        <Image src={large} alt={fullName + \" image\"} preview={false} />\r\n      </div>\r\n      {listInfoDiv}\r\n    </Card>\r\n  );\r\n}\r\n\r\nListMain.propTypes = {\r\n  editPersonFn: PropTypes.func,\r\n  editFailedFn: PropTypes.func,\r\n  person: PropTypes.object,\r\n  loading: PropTypes.bool\r\n};\r\n"]},"metadata":{},"sourceType":"module"}