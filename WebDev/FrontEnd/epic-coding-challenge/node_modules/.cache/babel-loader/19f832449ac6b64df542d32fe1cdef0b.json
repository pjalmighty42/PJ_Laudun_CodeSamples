{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  personList: [],\n  isLoading: false\n}; //ReduxJS uses Immer (fyi), so it's \"directly modifying\" state vars\n//(It's actually immutibly doing the modifying, but just pointing it out)\n\nexport var listSlice = createSlice({\n  name: \"personList\",\n  initialState: initialState,\n  reducers: {\n    setIsLoading: function setIsLoading(state, action) {\n      //Set if we're still loading up the screen\n      state.isLoading = action.payload;\n    },\n    setList: function setList(state, action) {\n      //Set redux personList here\n      state.personList = action.payload;\n    }\n  }\n});\nvar _listSlice$actions = listSlice.actions,\n    setIsLoading = _listSlice$actions.setIsLoading,\n    setList = _listSlice$actions.setList;\nexport { setIsLoading, setList };\nexport default listSlice.reducer;","map":{"version":3,"sources":["C:/Users/paull/Desktop/mad-mobile-coding-challenge/src/app/features/listSlice.js"],"names":["createSlice","initialState","personList","isLoading","listSlice","name","reducers","setIsLoading","state","action","payload","setList","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB,C,CAKA;AACA;;AACA,OAAO,IAAMC,SAAS,GAAGJ,WAAW,CAAC;AACnCK,EAAAA,IAAI,EAAE,YAD6B;AAEnCJ,EAAAA,YAAY,EAAZA,YAFmC;AAGnCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,sBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B;AACAD,MAAAA,KAAK,CAACL,SAAN,GAAkBM,MAAM,CAACC,OAAzB;AACD,KAJO;AAKRC,IAAAA,OAAO,EAAE,iBAACH,KAAD,EAAQC,MAAR,EAAmB;AAC1B;AACAD,MAAAA,KAAK,CAACN,UAAN,GAAmBO,MAAM,CAACC,OAA1B;AACD;AARO;AAHyB,CAAD,CAA7B;AAeA,yBAAkCN,SAAS,CAACQ,OAA5C;AAAA,IAAQL,YAAR,sBAAQA,YAAR;AAAA,IAAsBI,OAAtB,sBAAsBA,OAAtB;;AAEP,eAAeP,SAAS,CAACS,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  personList: [],\r\n  isLoading: false\r\n};\r\n\r\n//ReduxJS uses Immer (fyi), so it's \"directly modifying\" state vars\r\n//(It's actually immutibly doing the modifying, but just pointing it out)\r\nexport const listSlice = createSlice({\r\n  name: \"personList\",\r\n  initialState,\r\n  reducers: {\r\n    setIsLoading: (state, action) => {\r\n      //Set if we're still loading up the screen\r\n      state.isLoading = action.payload;\r\n    },\r\n    setList: (state, action) => {\r\n      //Set redux personList here\r\n      state.personList = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setIsLoading, setList } = listSlice.actions;\r\n\r\nexport default listSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}